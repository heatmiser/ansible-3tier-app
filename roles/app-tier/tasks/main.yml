---
# tasks file for app-tier
- name: install tomcat packages
  ansible.builtin.yum:
    name: tomcat
    state: latest

#- name: Print all hostvars variables for AnsibleGroup_appdbs[0]
#  debug: 
#    var: hostvars[groups['AnsibleGroup_appdbs'][0]]

- name: Set tomcat_can_network_connect_db flag on and keep it persistent across reboots
  ansible.posix.seboolean:
    name: tomcat_can_network_connect_db
    state: yes
    persistent: yes

- name: create tomcat ROOT directory
  ansible.builtin.file:
    path: "{{ webapps }}/ROOT"
    state: directory
    owner: tomcat
    group: tomcat

- name: copy index.html to tomcat webapps ROOT"
  ansible.builtin.template:
    src: index.html.j2
    dest: "{{ webapps }}/ROOT/index.html"
    mode: 0644
    owner: tomcat
    group: tomcat
  notify:
    - restart_tomcat

- name: Download application war and place in {{ webapps }}
  ansible.builtin.get_url:
    url: https://heatmiser-public-02.s3.us-east-2.amazonaws.com/JDBC_PostgreSQL_52.zip
    dest: "{{ webapps }}/3ta.war"
    mode: 0644
    owner: tomcat
    group: tomcat
  notify:
    - restart_tomcat

- name: copy mydb.cfg to tomcat user home dir"
  ansible.builtin.template:
    src: mydb.cfg.j2
    dest: /usr/share/tomcat/mydb.cfg
    mode: 0644
    owner: tomcat
    group: tomcat
  notify:
    - restart_tomcat

- name: start Tomcat service and enable Tomcat to start at boot time
  ansible.builtin.service:
    name: tomcat.service
    enabled: yes
  notify:
    - restart_tomcat

- name: Open tomcat port with firewalld
  ansible.posix.firewalld:
    port: "{{ item }}/tcp"
    permanent: true
    immediate: true
    state: enabled
  with_items: "{{tomcat_firewall_open_ports}}"
  when:
    - ansible_os_family == 'RedHat'
    - ansible_distribution_major_version|int >= 7
    - ansible_facts.services['firewalld.service'] is defined and ansible_facts.services['firewalld.service'].state == 'running'
    - ansible_facts.services['firewalld.service'] is defined and ansible_facts.services['firewalld.service'].status == 'enabled'
  tags: firewall
